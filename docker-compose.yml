services:

  nginx-and-angular:
    build:
      context: .
      dockerfile: Frontend/Dockerfile
    image: "nginx-and-angular"
    container_name: "nginx-and-angular"
    ports:
      - "80:80"
      - "7097:7097"
    restart: unless-stopped
      
  api:
    build:
      context: .
      dockerfile: Backend/Sources/RosePlus/Hosts/RosePlus.Api/Dockerfile
    image: "api"
    container_name: "api"
    environment:
      - ASPNETCORE_ENVIRONMENT=${API_ENVIRONMENT} 
      - ASPNETCORE_URLS=${API_URLS}
      - ConnectionStrings__RosePlusDB=${API_DB_CONNECTION_STRING}
    depends_on:
      - "postgres"
    restart: unless-stopped
      
  postgres:
    image: "postgres"
    container_name: "postgres"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: ${POSTGRES_DATA}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432" #Убрать для прода
    restart: unless-stopped
    
volumes:
    postgres_data: